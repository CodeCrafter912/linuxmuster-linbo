#!/usr/bin/make -f
#
# Dieses Makefile installiert alle Binaries in die jeweiligen sysroot-Verzeichnisse.
# Frank Sch√ºtte
# 2016
# GPL v3
#

CURDIR=$(shell pwd)

include common.mk

ALL_DEBS  = xkb-data ncurses-base grub-ipxe dropbear

BIN32_DEBS= grub-efi-ia32-bin 

BIN64_DEBS= grub-efi-amd64-bin

BIN_DEBS  = libgudev-1.0-0 libgudev-1.0-dev cloop-utils gdisk libstdc++-5-dev \
	    libc6 libc6-dev libstdc++6 libgcc1 libgcc-5-dev \
	    libasan0 libatomic1 libgomp1 libitm1 libquadmath0 \
	    libudev1 libudev-dev libxkbcommon0 libxkbcommon-dev \
	    libevdev2 libevdev-dev libnih1 libnih-dev libwacom2 libwacom-dev \
	    libnih-dbus1 libnih-dbus-dev libcgmanager0 libcgmanager-dev \
	    libdbus-1-3 libdbus-1-dev libmtdev1 libmtdev-dev \
	    mesa-common-dev pkg-config libuuid1 libglib2.0-0 libglib2.0-dev \
	    acl bc bluez bvi ctorrent dosfstools dropbear-bin e2fsprogs efibootmgr \
	    ethtool grub-pc grub-pc-bin grub-common grub2-common \
	    kmod libc-bin libicu55 libgpod-common libmtp-runtime \
	    libnetpbm10 libpci3 libpng12-0 mount netpbm \
	    ncurses-bin pcmciautils reiserfsprogs rsync sysvinit-utils \
	    udev udisks2 udpcast util-linux uuid-dev uuid-runtime xserver-xorg-input-vmmouse \
	    zlib1g zlib1g-dev libinput10 libinput-dev libffi-dev libffi6 \
	    libreadline6 libtinfo5 e2fslibs libcomerr2 libparted2 libparted-dev parted \
	    libblkid1 libpcre3 libmount1 liblzma5 libpopt0 libacl1 libncurses5 libattr1 \
	    libkmod2  libdevmapper1.02.1 libdevmapper-dev libdevmapper-event1.02.1 libselinux1

#FIXME: Abh√§ngigkeiten durch debootstrap aufl√∂sen
SYS32ARCHIVES= 

SYS64ARCHIVES=

DIRS := $(CACHEDIR)

# targets
all: build

$(DIRS):
	mkdir -p $(DIRS)

download: | $(DIRS)
	cd $(CACHEDIR); apt-get download $(addsuffix :i386, $(BIN_DEBS)) $(addsuffix :i386, $(BIN32_DEBS)) $(addsuffix :all, $(ALL_DEBS)) \
					$(addsuffix :amd64, $(BIN_DEBS)) $(addsuffix :amd64, $(BIN64_DEBS))
	rm -rf $(addprefix $(SYSROOT)/usr/share/doc/, $(BIN_DEBS) $(BIN32_DEBS) $(ALL_DEBS))
	rm -rf $(addprefix $(SYSROOT64)/usr/share/doc/, $(BIN_DEBS) $(BIN64_DEBS) $(ALL_DEBS))

configure: configure32 configure64

configure32: $(addprefix $(SYSROOT)/usr/share/doc/, $(BIN_DEBS) $(BIN32_DEBS) $(ALL_DEBS))

$(addprefix $(SYSROOT)/usr/share/doc/, $(BIN_DEBS) $(BIN32_DEBS) $(ALL_DEBS)): $(SYS32ARCHIVES)
	echo "[1mInstalling 32bit packages to sysroot...[0m"
	$(foreach pkg, $(wildcard $(CACHEDIR)/*_i386.deb) $(wildcard $(CACHEDIR)/*_all.deb), dpkg -x $(pkg) $(SYSROOT) ; )
	touch $(addprefix $(SYSROOT)/usr/share/doc/, $(BIN_DEBS) $(BIN32_DEBS) $(ALL_DEBS))

configure64: $(addprefix $(SYSROOT64)/usr/share/doc/, $(BIN_DEBS) $(BIN64_DEBS) $(ALL_DEBS))

$(addprefix $(SYSROOT64)/usr/share/doc/, $(BIN_DEBS) $(BIN64_DEBS) $(ALL_DEBS)): $(SYS64ARCHIVES)
	echo "[1mInstalling 64bit packages to sysroot...[0m"
	$(foreach pkg, $(wildcard $(CACHEDIR)/*_amd64.deb) $(wildcard $(CACHEDIR)/*_all.deb), dpkg -x $(pkg) $(SYSROOT64) ; )
	touch $(addprefix $(SYSROOT64)/usr/share/doc/, $(BIN_DEBS) $(BIN64_DEBS) $(ALL_DEBS))

build:

distclean: clean

clean: 

install: $(patsubst linbo/%,$(SYSROOT)/%, $(LINBO))) $(patsubst linbo/%, $(SYSROOT64)/%, $(LINBO)))

$(patsubst linbo/%, $(SYSROOT)/%, $(LINBO))): $(LINBO)
	$(foreach file, $(LINBO), install -D $(file) $(patsubst linbo/%,$(SYSROOT)/%,$(file)) ; )
	install -D $(SYSROOT)/linbo_cmd.sh $(SYSROOT)/usr/bin/linbo_cmd
	install -D $(SYSROOT)/patch_registry.sh $(SYSROOT)/bin/patch_registry
	install -D $(SYSROOT)/linbo_wrapper.sh $(SYSROOT)/usr/bin/linbo_wrapper

$(patsubst linbo/%, $(SYSROOT64)/%, $(LINBO))): $(LINBO)
	$(foreach file, $(LINBO), install -D $(file) $(patsubst linbo/%,$(SYSROOT64)/%,$(file)) ; )
	install -D $(SYSROOT64)/linbo_cmd.sh $(SYSROOT64)/usr/bin/linbo_cmd
	install -D $(SYSROOT64)/patch_registry.sh $(SYSROOT64)/bin/patch_registry
	install -D $(SYSROOT64)/linbo_wrapper.sh $(SYSROOT64)/usr/bin/linbo_wrapper

.PHONY: all $(DIRS)
.PHONY: download build distclean clean install
.PHONY: configure configure32 configure64
