#!/bin/bash
# postinst script for linuxmuster
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

# Source debconf library.
#. /usr/share/debconf/confmodule

#db_version 2.0


LINBODIR=/var/linbo
DISTCONF=/usr/share/linuxmuster/config/dist.conf

case "$1" in

 configure)

 	# repair link to examples
	 [ ! -L "$LINBODIR/examples" -a -e "$LINBODIR/examples" ] && rm -rf $LINBODIR/examples
	 [ -e "$LINBODIR/examples" ] || ln -s /usr/share/doc/linuxmuster-linbo/examples $LINBODIR/examples

	 # init script
	 update-rc.d linbo-multicast defaults
	 update-rc.d linbo-bittorrent defaults

	 # linuxmuster related stuff
	 if [ -e "$DISTCONF" ]; then
	 	. $DISTCONF
	 	. $HELPERFUNCTIONS
	 	[ -e "$INSTALLED" ] || exit 0
	 	[ "$imaging" = "linbo" ] || exit 0
	 	LINBOLOGDIR="$LOGDIR/linbo"
	 else
	 	exit 0
	 fi

	 # check serverip in default pxelinux.cfg and start.conf
  for i in $LINBODEFAULTCONF $LINBODIR/start.conf; do
  	if ! grep ^Server $i | grep -q "$serverip"; then
	  	echo "Adjusting server ip in $i to $serverip ..."
	 	 cp $i $i.dpkg-old
	 	 sed -e "s/^Server = \([0-9]\{1,3\}[.]\)\{3\}[0-9]\{1,3\}/Server = $serverip/" -i $i
	  fi
  done
	 if grep -q "server=" $PXELINUXCFG; then
	 	if ! grep -q "$serverip" $PXELINUXCFG; then
	 		echo "Adjusting server ip in $PXELINUXCFG to $serverip ..."
	 		cp $PXELINUXCFG $PXELINUXCFG.dpkg-old
	 		sed -e "s/server=\([0-9]\{1,3\}[.]\)\{3\}[0-9]\{1,3\}/server=$serverip/g" -i $PXELINUXCFG
	 	fi
	 fi

 	# updating start.confs
 	[ -d "$LINBODIR/backup" ] || mkdir -p $LINBODIR/backup
 	for i in `find $LINBODIR -type f -name start.conf\*`; do
 		backed_up=no
 		if grep -q RemoteSyncEnabled $i; then
 			backup_file $i
 			backed_up=yes
 			sed -e 's/RemoteSyncEnabled/NewEnabled/g' -i $i
 		fi
 		if grep -q pxegrub $i; then
 			if [ "$backed_up" = "no" ]; then
 				backup_file $i
 			 backed_up=yes
 			fi
 			sed -e 's/pxegrub/grub.exe/g' -i $i
 		fi
   if grep -q ^UseMulticast $i; then
 			[ "$backed_up" = "no" ] &&	backup_file $i
    RET=`grep -i ^usemulticast $i | tail -1 | awk -F= '{ print $2 }' | awk '{ print $1 }' | tr A-Z a-z`
    if [ "$RET" = "yes" ]; then
     rstr="multicast"
    else
     rstr="rsync"
    fi
    sed -e "s|^UseMulticast.*|DownloadType = $rstr # Image-Download per torrent\|multicast\|rsync\, default ist rsync|" -i $i
 		fi
  done

 	# check for linbo mail wrapper in /etc/aliases
 	if ! grep -q ^linbo: /etc/aliases; then
 		cp /etc/aliases /etc/aliases.dpkg-old
 		sed -e "/^root:/a\
linbo: \"\|\/usr\/share\/linuxmuster-linbo\/mail2log.sh\"" -i /etc/aliases
 		newaliases
 	fi

  # add bittorrent user if not present
  if ! id bittorrent &> /dev/null; then
   useradd -c "BitTorrent User" -d /var/lib/bittorrent -g nogroup -r bittorrent
   dpkg-statoverride --add bittorrent nogroup 755 /var/lib/bittorrent
   dpkg-statoverride --add bittorrent nogroup 755 /var/log/bittorrent
  fi
  chown bittorrent:nogroup /var/lib/bittorrent -R
  chown bittorrent:nogroup /var/log/bittorrent -R

  # provide a bittorrent default file if necessary
  if [ ! -s /etc/default/bittorrent -a -s /usr/share/doc/bittorrent/examples/bittorrent.default ]; then
   cp /usr/share/doc/bittorrent/examples/bittorrent.default /etc/default/bittorrent
  fi

  # provide a bittorrent init script if necessary
  if [ ! -s /etc/init.d/bittorrent -a -s /usr/share/doc/bittorrent/examples/bittorrent.init ]; then
   cp /usr/share/doc/bittorrent/examples/bittorrent.init /etc/init.d/bittorrent
   chmod 755 /etc/init.d/bittorrent
   update-rc.d bittorrent defaults
  fi

  # setting needed options in /etc/default/bittorrent
  if [ -s /etc/default/bittorrent ]; then
   if ! grep -q ^REANNOUNCE_INTERVAL /etc/default/bittorrent; then
    echo "Adding REANNOUNCE_INTERVAL=15 to /etc/default/bittorrent."
    cp /etc/default/bittorrent /etc/default/bittorrent.dpkg-old && bt_backup=yes
    echo >> /etc/default/bittorrent
    echo "# seconds downloaders should wait between reannouncements (default 1800)" >> /etc/default/bittorrent
    echo "# 15 seconds is recommended value for linuxmuster-linbo" >> /etc/default/bittorrent
    echo "REANNOUNCE_INTERVAL=15" >> /etc/default/bittorrent
   fi
   if ! grep -q ^"DAEMONUSER=bittorrent" /etc/default/bittorrent; then
    echo "Adding DAEMONUSER=bittorrent to /etc/default/bittorrent."
    [ -z "$bt_backup" ] && cp /etc/default/bittorrent /etc/default/bittorrent.dpkg-old && bt_backup=yes
    sed -e 's|^DAEMONUSER=|#DAEMONUSER=|' -i /etc/default/bittorrent
    echo >> /etc/default/bittorrent
    echo "# it is recommended for linuxmuster-linbo to run the service as bittorrent user" >> /etc/default/bittorrent
    echo "DAEMONUSER=bittorrent" >> /etc/default/bittorrent
   fi
   if ! grep -q ^"ALLOWED_DIR=$LINBODIR" /etc/default/bittorrent; then
    echo "Adding ALLOWED_DIR=$LINBODIR to /etc/default/bittorrent."
    [ -z "$bt_backup" ] && cp /etc/default/bittorrent /etc/default/bittorrent.dpkg-old && bt_backup=yes
    sed -e 's|^ALLOWED_DIR=|#ALLOWED_DIR=|' -i /etc/default/bittorrent
    echo >> /etc/default/bittorrent
    echo "# where the LINBO images live" >> /etc/default/bittorrent
    echo "ALLOWED_DIR=$LINBODIR" >> /etc/default/bittorrent
   fi
   if ! grep -q ^"PORT=6969" /etc/default/bittorrent; then
    echo "Adding PORT=6969 to /etc/default/bittorrent."
    [ -z "$bt_backup" ] && cp /etc/default/bittorrent /etc/default/bittorrent.dpkg-old
    sed -e 's|^PORT=|#PORT=|' -i /etc/default/bittorrent
    echo >> /etc/default/bittorrent
    echo "# port must be 6969 for linuxmuster-linbo" >> /etc/default/bittorrent
    echo "PORT=6969" >> /etc/default/bittorrent
   fi
   # provide a logrotate file for bittorrent
   if [ ! -e /etc/logrotate.d/bittorrent ]; then
    echo "Creating /etc/logrotate.d/bittorrent."
    sed -e 's|/var/log/linuxmuster/linbo/|/var/log/bittorrent/|' /etc/logrotate.d/linuxmuster-linbo > /etc/logrotate.d/bittorrent
   fi
  fi # /etc/default/bittorrent

  # change owner of logdir to nobody
  [ -d "$LINBOLOGDIR" ] || mkdir -p $LINBOLOGDIR
  chown nobody $LINBOLOGDIR

  # create dropbear ssh keys
  if [ ! -s "$SYSCONFDIR/linbo/ssh_host_rsa_key" ]; then
   echo -e "$SYSCONFDIR/linbo/ssh_host_rsa_key\n\n\n\n\n" | ssh-keygen -t rsa
   /usr/lib/dropbear/dropbearconvert openssh dropbear $SYSCONFDIR/linbo/ssh_host_rsa_key $SYSCONFDIR/linbo/dropbear_rsa_host_key
  fi
  if [ ! -s "$SYSCONFDIR/linbo/ssh_host_dsa_key" ]; then
   echo -e "$SYSCONFDIR/linbo/ssh_host_dsa_key\n\n\n\n\n" | ssh-keygen -t dsa
   /usr/lib/dropbear/dropbearconvert openssh dropbear $SYSCONFDIR/linbo/ssh_host_dsa_key $SYSCONFDIR/linbo/dropbear_dss_host_key
  fi

  # kill obsolete btdownloadheadless processes from old versions
  if ps ax | grep -v grep | grep -q btdownloadheadless; then
   /etc/init.d/linbo-bittorrent stop
   oldpids="$(ps ax | grep -v grep | grep btdownloadheadless | awk '{ print $1 }')"
   echo "Sending obsolete btdownloadheadless processes the TERM signal."
   kill $oldpids
   /etc/init.d/linbo-bittorrent start
  fi

  # update linbofs.gz
  $LINBOUPDATE

 ;;

 abort-upgrade|abort-remove|abort-deconfigure)

 ;;

 *)
	 echo "postinst called with unknown argument \`$1'" >&2
	 exit 1
 ;;

esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

#db_stop

exit 0

