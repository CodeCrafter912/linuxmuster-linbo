diff -ruN a/src/gui/embedded/qkbdpc101_qws.cpp b/src/gui/embedded/qkbdpc101_qws.cpp
--- a/src/gui/embedded/qkbdpc101_qws.cpp	2009-06-20 07:02:18.000000000 +0200
+++ b/src/gui/embedded/qkbdpc101_qws.cpp	2009-09-12 15:08:58.000000000 +0200
@@ -62,7 +62,8 @@
 
 QT_BEGIN_NAMESPACE
 
-static const QWSKeyMap pc101KeyM[] = {
+// german keymap patch
+static const QWSKeyMap pc101KeyDefault[] = {
     {   Qt::Key_unknown,    0xffff  , 0xffff  , 0xffff  },
     {   Qt::Key_Escape,     27      , 27      , 0xffff  },
     {   Qt::Key_1,      '1'     , '!'     , 0xffff  },
@@ -194,7 +195,9 @@
     {   0,          0xffff  , 0xffff  , 0xffff  }
 };
 
-static const int keyMSize = sizeof(pc101KeyM)/sizeof(QWSKeyMap)-1;
+// german keymap patch
+// static const int keyMSize = sizeof(pc101KeyM)/sizeof(QWSKeyMap)-1;
+static const int keyMSize = sizeof(pc101KeyDefault)/sizeof(pc101KeyDefault[0])-1;
 
 //===========================================================================
 
@@ -222,13 +225,21 @@
     // iPAQ Action Key has ScanCode 0x60: 0x60|0x80 = 0xe0 == extended mode 1 !
     ipaq_return_pressed = false;
 #endif
+    
+    // german keymap patch
+    pc101KeyM=new QWSKeyMap[keyMSize+1];
+    memcpy(pc101KeyM, pc101KeyDefault, (keyMSize+1)*sizeof(pc101KeyDefault[0]));
 }
 
 QWSPC101KeyboardHandler::~QWSPC101KeyboardHandler()
 {
+  delete [] pc101KeyM;
 }
 
-const QWSKeyMap *QWSPC101KeyboardHandler::keyMap() const
+
+// german keymap patch
+// const QWSKeyMap *QWSPC101KeyboardHandler::keyMap() const
+QWSKeyMap* QWSPC101KeyboardHandler::keyMap()
 {
     return pc101KeyM;
 }
@@ -480,6 +491,13 @@
     extended = 0;
 }
 
+// german keymap patch
+void QWSPC101KeyboardHandler::setKeyMap(void *p)
+{
+  if(!p) return;
+  memcpy(pc101KeyM, p, keyMSize*sizeof(pc101KeyDefault[0]));
+}
+
 QT_END_NAMESPACE
 
 #endif // QT_NO_QWS_KEYBOARD
diff -ruN a/src/gui/embedded/qkbdpc101_qws.h b/src/gui/embedded/qkbdpc101_qws.h
--- a/src/gui/embedded/qkbdpc101_qws.h	2009-06-20 07:02:18.000000000 +0200
+++ b/src/gui/embedded/qkbdpc101_qws.h	2009-09-12 12:52:26.000000000 +0200
@@ -68,7 +68,11 @@
     virtual ~QWSPC101KeyboardHandler();
 
     virtual void doKey(uchar scancode);
-    virtual const QWSKeyMap *keyMap() const;
+
+    // german keymap patch
+    // virtual const QWSKeyMap *keyMap() const;
+    virtual QWSKeyMap* keyMap();
+    virtual void setKeyMap(void*);
 
 protected:
     bool shift;
@@ -82,6 +86,8 @@
     Qt::KeyboardModifiers modifiers;
     int prevuni;
     int prevkey;
+
+    QWSKeyMap *pc101KeyM;
 };
 
 #endif // QT_NO_QWS_KBD_PC101
diff -ruN a/src/gui/embedded/qkbd_qws.cpp b/src/gui/embedded/qkbd_qws.cpp
--- a/src/gui/embedded/qkbd_qws.cpp	2009-06-20 07:02:18.000000000 +0200
+++ b/src/gui/embedded/qkbd_qws.cpp	2009-09-12 12:47:59.000000000 +0200
@@ -241,6 +241,10 @@
     d->endAutoRepeat();
 }
 
+// german keymap patch
+void* QWSKeyboardHandler::keyMap() { return 0; }
+void  QWSKeyboardHandler::setKeyMap(void*) { }
+
 QT_END_NAMESPACE
 
 #include "qkbd_qws.moc"
diff -ruN a/src/gui/embedded/qkbd_qws.h b/src/gui/embedded/qkbd_qws.h
--- a/src/gui/embedded/qkbd_qws.h	2009-06-20 07:02:18.000000000 +0200
+++ b/src/gui/embedded/qkbd_qws.h	2009-09-12 12:48:13.000000000 +0200
@@ -63,6 +63,10 @@
     virtual void processKeyEvent(int unicode, int keycode, Qt::KeyboardModifiers modifiers,
                             bool isPress, bool autoRepeat);
 
+    // german keyman patch
+    virtual void* keyMap();
+    virtual void  setKeyMap(void*);
+
 protected:
     int transformDirKey(int key);
     void beginAutoRepeat(int uni, int code, Qt::KeyboardModifiers mod);
